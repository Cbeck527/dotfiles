# remap prefix to Control + a, like screen
set -g prefix C-a
unbind C-b
bind a send-prefix

# unbind more tmux things
unbind '"'
unbind '%'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# mouse things
set -g mouse on

setw -g mode-keys vi
set -g status-keys emacs

set -g default-shell $SHELL

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
# Jump back to the prompt after yanking
bind -T copy-mode-vi 'y' send -X copy-selection
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi "y" send -X copy-pipe "pbcopy"
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g history-limit 10000

# look better
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Titles (window number, program name, active (or not)
set -g set-titles on
set -g set-titles-string '#S.#I.#P #W'

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# Respect extra environment variables at startup
set-option -ga update-environment ' AWS_PROFILE'

# rebalance windows
bind-key J select-layout even-vertical
bind-key H select-layout even-horizontal

# engage screen style!
bind-key Tab last-pane
bind-key n next-window
bind-key C-a last-window
bind-key C-n next-window
bind-key p previous-window
bind-key C-p previous-window
bind-key c new-window
bind-key C-c new-window
bind-key C-k confirm-before -p "Kill pane #P? (y/n)" kill-pane
bind-key K confirm-before -p "Kill window #W? (y/n)" kill-window
bind-key '\' kill-session
bind-key 'C-\' kill-session
bind | split-window -h -c "#{pane_current_path}"
bind S split-window -v -c "#{pane_current_path}"
bind Q resize-pane -Z
bind X break-pane -d -n hidden
bind-key '"' choose-tree -Zw

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind '\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# statusline stuff
setw -g window-status-current-format '#[fg=red]( #[fg=white]#I- #W#[fg=red]#F )'
setw -g window-status-format '#I #W#F '
set -g status-interval 5
set -g status-justify centre
set -g status-left ''
set -g status-right '#{?pane_synchronized, #[fg=red]IN_SYNC#[default],}#[fg=default][ #[fg=cyan]#S #[fg=default]]'
set -g status-right-length 50
set -g status-left-length 20

set -g visual-activity on

# # Color (Solarized dark)
set-option -g status-bg black
set-option -g status-fg default
set-option -g status-attr default

# pane border
set-option -g pane-border-fg white
set-option -g pane-active-border-fg white

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
